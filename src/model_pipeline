# treino.py (exemplo)
import joblib
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from preprocessing import preprocess_data
import pandas as pd

# Carregar dados de treino
df_train = pd.read_csv("data/train_dataset.csv")

# Separar features e target
x = df_train.drop(columns=["Churn"])
y = df_train["Churn"]

# Fit do scaler
scaler = StandardScaler()
X_scaled = preprocess_data(x, fit_scaler=True, scaler=scaler)

# Treinar modelo
model = RandomForestClassifier(random_state=42)
model.fit(X_scaled, y)

# Salvar modelo e scaler juntos em um dict
artifacts = {
    "model": model,
    "scaler": scaler
}
joblib.dump(artifacts, "artifacts/model_pipeline.pkl")

print("âœ… Arquivo model_pipeline.pkl salvo com sucesso!")
